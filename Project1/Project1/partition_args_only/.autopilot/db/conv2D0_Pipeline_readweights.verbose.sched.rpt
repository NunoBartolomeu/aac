

================================================================
== Vitis HLS Report for 'conv2D0_Pipeline_readweights'
================================================================
* Date:           Thu Apr 11 18:30:40 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        Project1
* Solution:       partition (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010i-clg225-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.911 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11|  0.110 us|  0.110 us|   11|   11|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- readweights  |        9|        9|         1|          1|          1|     9|       yes|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.91>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [conv2D0.cpp:16]   --->   Operation 4 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%weightsT = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 5 'alloca' 'weightsT' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%weightsT_1 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 6 'alloca' 'weightsT_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%weightsT_2 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 7 'alloca' 'weightsT_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%weightsT_3 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 8 'alloca' 'weightsT_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%weightsT_4 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 9 'alloca' 'weightsT_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%weightsT_5 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 10 'alloca' 'weightsT_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%weightsT_6 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 11 'alloca' 'weightsT_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%weightsT_7 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 12 'alloca' 'weightsT_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%weightsT_8 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 13 'alloca' 'weightsT_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%weights_8_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_8_load"   --->   Operation 14 'read' 'weights_8_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%weights_7_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_7_load"   --->   Operation 15 'read' 'weights_7_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%weights_6_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_6_load"   --->   Operation 16 'read' 'weights_6_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%weights_5_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_5_load"   --->   Operation 17 'read' 'weights_5_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%weights_4_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_4_load"   --->   Operation 18 'read' 'weights_4_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%weights_3_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_3_load"   --->   Operation 19 'read' 'weights_3_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%weights_2_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_2_load"   --->   Operation 20 'read' 'weights_2_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%weights_1_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_1_load"   --->   Operation 21 'read' 'weights_1_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%weights_0_load_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %weights_0_load"   --->   Operation 22 'read' 'weights_0_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln16 = store i4 0, i4 %i_1" [conv2D0.cpp:16]   --->   Operation 23 'store' 'store_ln16' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc12"   --->   Operation 24 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i = load i4 %i_1" [conv2D0.cpp:16]   --->   Operation 25 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.73ns)   --->   "%icmp_ln16 = icmp_eq  i4 %i, i4 9" [conv2D0.cpp:16]   --->   Operation 26 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.73ns)   --->   "%add_ln16 = add i4 %i, i4 1" [conv2D0.cpp:16]   --->   Operation 27 'add' 'add_ln16' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln16 = br i1 %icmp_ln16, void %for.inc12.split, void %loop_k1.preheader.exitStub" [conv2D0.cpp:16]   --->   Operation 28 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln10 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [conv2D0.cpp:10]   --->   Operation 29 'specpipeline' 'specpipeline_ln10' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%speclooptripcount_ln10 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9" [conv2D0.cpp:10]   --->   Operation 30 'speclooptripcount' 'speclooptripcount_ln10' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specloopname_ln16 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [conv2D0.cpp:16]   --->   Operation 31 'specloopname' 'specloopname_ln16' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (2.42ns)   --->   "%weightsT_9 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.9i8.i8.i4, i4 0, i8 %weights_0_load_read, i4 1, i8 %weights_1_load_read, i4 2, i8 %weights_2_load_read, i4 3, i8 %weights_3_load_read, i4 4, i8 %weights_4_load_read, i4 5, i8 %weights_5_load_read, i4 6, i8 %weights_6_load_read, i4 7, i8 %weights_7_load_read, i4 8, i8 %weights_8_load_read, i8 0, i4 %i" [conv2D0.cpp:17]   --->   Operation 32 'sparsemux' 'weightsT_9' <Predicate = (!icmp_ln16)> <Delay = 2.42> <CoreInst = "SparseMux">   --->   Core 135 'SparseMux' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.88ns)   --->   "%switch_ln17 = switch i4 %i, void %arrayidx11.case.8, i4 0, void %for.inc12.split.arrayidx11.exit_crit_edge10, i4 1, void %arrayidx11.case.1, i4 2, void %arrayidx11.case.2, i4 3, void %arrayidx11.case.3, i4 4, void %arrayidx11.case.4, i4 5, void %arrayidx11.case.5, i4 6, void %arrayidx11.case.6, i4 7, void %for.inc12.split.arrayidx11.exit_crit_edge" [conv2D0.cpp:17]   --->   Operation 33 'switch' 'switch_ln17' <Predicate = (!icmp_ln16)> <Delay = 1.88>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_7" [conv2D0.cpp:10]   --->   Operation 34 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 7)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 35 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 7)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_6" [conv2D0.cpp:10]   --->   Operation 36 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 6)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 37 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 6)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_5" [conv2D0.cpp:10]   --->   Operation 38 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 5)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 39 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 5)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_4" [conv2D0.cpp:10]   --->   Operation 40 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 4)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 41 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 4)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_3" [conv2D0.cpp:10]   --->   Operation 42 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 3)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 43 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 3)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_2" [conv2D0.cpp:10]   --->   Operation 44 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 2)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 45 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 2)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_1" [conv2D0.cpp:10]   --->   Operation 46 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 1)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 47 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 1)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT" [conv2D0.cpp:10]   --->   Operation 48 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i == 0)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 49 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i == 0)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_9, i8 %weightsT_8" [conv2D0.cpp:10]   --->   Operation 50 'store' 'store_ln10' <Predicate = (!icmp_ln16 & i != 0 & i != 1 & i != 2 & i != 3 & i != 4 & i != 5 & i != 6 & i != 7)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln17 = br void %arrayidx11.exit" [conv2D0.cpp:17]   --->   Operation 51 'br' 'br_ln17' <Predicate = (!icmp_ln16 & i != 0 & i != 1 & i != 2 & i != 3 & i != 4 & i != 5 & i != 6 & i != 7)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (1.58ns)   --->   "%store_ln16 = store i4 %add_ln16, i4 %i_1" [conv2D0.cpp:16]   --->   Operation 52 'store' 'store_ln16' <Predicate = (!icmp_ln16)> <Delay = 1.58>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln16 = br void %for.inc12" [conv2D0.cpp:16]   --->   Operation 53 'br' 'br_ln16' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%weightsT_load = load i8 %weightsT"   --->   Operation 54 'load' 'weightsT_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%weightsT_1_load = load i8 %weightsT_1"   --->   Operation 55 'load' 'weightsT_1_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%weightsT_2_load = load i8 %weightsT_2"   --->   Operation 56 'load' 'weightsT_2_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%weightsT_3_load = load i8 %weightsT_3"   --->   Operation 57 'load' 'weightsT_3_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%weightsT_4_load = load i8 %weightsT_4"   --->   Operation 58 'load' 'weightsT_4_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%weightsT_5_load = load i8 %weightsT_5"   --->   Operation 59 'load' 'weightsT_5_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%weightsT_6_load = load i8 %weightsT_6"   --->   Operation 60 'load' 'weightsT_6_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%weightsT_7_load = load i8 %weightsT_7"   --->   Operation 61 'load' 'weightsT_7_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%weightsT_8_load = load i8 %weightsT_8"   --->   Operation 62 'load' 'weightsT_8_load' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_8_out, i8 %weightsT_8_load"   --->   Operation 63 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_7_out, i8 %weightsT_7_load"   --->   Operation 64 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_6_out, i8 %weightsT_6_load"   --->   Operation 65 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_5_out, i8 %weightsT_5_load"   --->   Operation 66 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_4_out, i8 %weightsT_4_load"   --->   Operation 67 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_3_out, i8 %weightsT_3_load"   --->   Operation 68 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_2_out, i8 %weightsT_2_load"   --->   Operation 69 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_1_out, i8 %weightsT_1_load"   --->   Operation 70 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_out, i8 %weightsT_load"   --->   Operation 71 'write' 'write_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 72 'ret' 'ret_ln0' <Predicate = (icmp_ln16)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.911ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln16', conv2D0.cpp:16) of constant 0 on local variable 'i', conv2D0.cpp:16 [38]  (1.588 ns)
	'load' operation 4 bit ('i', conv2D0.cpp:16) on local variable 'i', conv2D0.cpp:16 [41]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln16', conv2D0.cpp:16) [42]  (1.735 ns)
	'store' operation 0 bit ('store_ln16', conv2D0.cpp:16) of variable 'add_ln16', conv2D0.cpp:16 on local variable 'i', conv2D0.cpp:16 [79]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
