

================================================================
== Vitis HLS Report for 'conv2D0_Pipeline_readweights'
================================================================
* Date:           Thu Apr 11 18:16:35 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        Project1
* Solution:       pipeline_unroll_2 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010i-clg225-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.301 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        8|        9|  80.000 ns|  90.000 ns|    8|    9|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- readweights  |        6|        6|         2|          1|          1|     5|       yes|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 5 2 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [conv2D0.cpp:16]   --->   Operation 6 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%weightsT_1 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 7 'alloca' 'weightsT_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%weightsT_3 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 8 'alloca' 'weightsT_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%weightsT_5 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 9 'alloca' 'weightsT_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%weightsT_7 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 10 'alloca' 'weightsT_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%weightsT = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 11 'alloca' 'weightsT' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%weightsT_2 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 12 'alloca' 'weightsT_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%weightsT_4 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 13 'alloca' 'weightsT_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%weightsT_6 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 14 'alloca' 'weightsT_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%weightsT_8 = alloca i32 1" [conv2D0.cpp:10]   --->   Operation 15 'alloca' 'weightsT_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %weights, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln16 = store i4 0, i4 %i_1" [conv2D0.cpp:16]   --->   Operation 17 'store' 'store_ln16' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc12.0"   --->   Operation 18 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.30>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i = load i4 %i_1" [conv2D0.cpp:16]   --->   Operation 19 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.73ns)   --->   "%icmp_ln16 = icmp_ult  i4 %i, i4 9" [conv2D0.cpp:16]   --->   Operation 20 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln16 = br i1 %icmp_ln16, void %for.inc12.0.loop_orow_crit_edge.exitStub, void %for.inc12.0.split" [conv2D0.cpp:16]   --->   Operation 21 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i4 %i" [conv2D0.cpp:16]   --->   Operation 22 'zext' 'zext_ln16' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%or_ln16 = or i4 %i, i4 1" [conv2D0.cpp:16]   --->   Operation 23 'or' 'or_ln16' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln16_1 = zext i4 %or_ln16" [conv2D0.cpp:16]   --->   Operation 24 'zext' 'zext_ln16_1' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%weights_addr = getelementptr i8 %weights, i64 0, i64 %zext_ln16" [conv2D0.cpp:19]   --->   Operation 25 'getelementptr' 'weights_addr' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (2.32ns)   --->   "%weightsT_20 = load i4 %weights_addr" [conv2D0.cpp:19]   --->   Operation 26 'load' 'weightsT_20' <Predicate = (icmp_ln16)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_2 : Operation 27 [1/1] (1.88ns)   --->   "%switch_ln19 = switch i4 %i, void %arrayidx11.0.case.8, i4 0, void %for.inc12.0.split.arrayidx11.0.exit_crit_edge5, i4 2, void %arrayidx11.0.case.2, i4 4, void %arrayidx11.0.case.4, i4 6, void %for.inc12.0.split.arrayidx11.0.exit_crit_edge" [conv2D0.cpp:19]   --->   Operation 27 'switch' 'switch_ln19' <Predicate = (icmp_ln16)> <Delay = 1.88>
ST_2 : Operation 28 [1/1] (1.73ns)   --->   "%icmp_ln16_1 = icmp_ult  i4 %or_ln16, i4 9" [conv2D0.cpp:16]   --->   Operation 28 'icmp' 'icmp_ln16_1' <Predicate = (icmp_ln16)> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln16 = br i1 %icmp_ln16_1, void %arrayidx11.0.exit.loop_orow_crit_edge.exitStub, void %for.inc12.1_ifconv" [conv2D0.cpp:16]   --->   Operation 29 'br' 'br_ln16' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%weights_addr_1 = getelementptr i8 %weights, i64 0, i64 %zext_ln16_1" [conv2D0.cpp:19]   --->   Operation 30 'getelementptr' 'weights_addr_1' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>
ST_2 : Operation 31 [2/2] (2.32ns)   --->   "%weightsT_21 = load i4 %weights_addr_1" [conv2D0.cpp:19]   --->   Operation 31 'load' 'weightsT_21' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_2 : Operation 32 [1/1] (1.73ns)   --->   "%icmp_ln19 = icmp_eq  i4 %i, i4 0" [conv2D0.cpp:19]   --->   Operation 32 'icmp' 'icmp_ln19' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.73ns)   --->   "%icmp_ln19_1 = icmp_eq  i4 %i, i4 2" [conv2D0.cpp:19]   --->   Operation 33 'icmp' 'icmp_ln19_1' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.73ns)   --->   "%icmp_ln19_2 = icmp_eq  i4 %i, i4 4" [conv2D0.cpp:19]   --->   Operation 34 'icmp' 'icmp_ln19_2' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.73ns)   --->   "%add_ln16 = add i4 %i, i4 2" [conv2D0.cpp:16]   --->   Operation 35 'add' 'add_ln16' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln16 = store i4 %add_ln16, i4 %i_1" [conv2D0.cpp:16]   --->   Operation 36 'store' 'store_ln16' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 3.57>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%weightsT_10 = load i8 %weightsT"   --->   Operation 37 'load' 'weightsT_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%weightsT_11 = load i8 %weightsT_2"   --->   Operation 38 'load' 'weightsT_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%weightsT_12 = load i8 %weightsT_4"   --->   Operation 39 'load' 'weightsT_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%weightsT_13 = load i8 %weightsT_6"   --->   Operation 40 'load' 'weightsT_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%weightsT_14 = load i8 %weightsT_8"   --->   Operation 41 'load' 'weightsT_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%specpipeline_ln17 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [conv2D0.cpp:17]   --->   Operation 42 'specpipeline' 'specpipeline_ln17' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%speclooptripcount_ln10 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 5, i64 5, i64 5" [conv2D0.cpp:10]   --->   Operation 43 'speclooptripcount' 'speclooptripcount_ln10' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%specloopname_ln16 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [conv2D0.cpp:16]   --->   Operation 44 'specloopname' 'specloopname_ln16' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 45 [1/2] (2.32ns)   --->   "%weightsT_20 = load i4 %weights_addr" [conv2D0.cpp:19]   --->   Operation 45 'load' 'weightsT_20' <Predicate = (icmp_ln16)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_20, i8 %weightsT_6" [conv2D0.cpp:10]   --->   Operation 46 'store' 'store_ln10' <Predicate = (icmp_ln16 & i == 6)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx11.0.exit" [conv2D0.cpp:19]   --->   Operation 47 'br' 'br_ln19' <Predicate = (icmp_ln16 & i == 6)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_20, i8 %weightsT_4" [conv2D0.cpp:10]   --->   Operation 48 'store' 'store_ln10' <Predicate = (icmp_ln16 & i == 4)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx11.0.exit" [conv2D0.cpp:19]   --->   Operation 49 'br' 'br_ln19' <Predicate = (icmp_ln16 & i == 4)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_20, i8 %weightsT_2" [conv2D0.cpp:10]   --->   Operation 50 'store' 'store_ln10' <Predicate = (icmp_ln16 & i == 2)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx11.0.exit" [conv2D0.cpp:19]   --->   Operation 51 'br' 'br_ln19' <Predicate = (icmp_ln16 & i == 2)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_20, i8 %weightsT" [conv2D0.cpp:10]   --->   Operation 52 'store' 'store_ln10' <Predicate = (icmp_ln16 & i == 0)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx11.0.exit" [conv2D0.cpp:19]   --->   Operation 53 'br' 'br_ln19' <Predicate = (icmp_ln16 & i == 0)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_20, i8 %weightsT_8" [conv2D0.cpp:10]   --->   Operation 54 'store' 'store_ln10' <Predicate = (icmp_ln16 & i != 0 & i != 2 & i != 4 & i != 6)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln19 = br void %arrayidx11.0.exit" [conv2D0.cpp:19]   --->   Operation 55 'br' 'br_ln19' <Predicate = (icmp_ln16 & i != 0 & i != 2 & i != 4 & i != 6)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%weightsT_1_load_1 = load i8 %weightsT_1" [conv2D0.cpp:19]   --->   Operation 56 'load' 'weightsT_1_load_1' <Predicate = (icmp_ln16 & icmp_ln16_1 & !icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%weightsT_3_load_1 = load i8 %weightsT_3" [conv2D0.cpp:19]   --->   Operation 57 'load' 'weightsT_3_load_1' <Predicate = (icmp_ln16 & icmp_ln16_1 & !icmp_ln19_1)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%weightsT_5_load_1 = load i8 %weightsT_5" [conv2D0.cpp:19]   --->   Operation 58 'load' 'weightsT_5_load_1' <Predicate = (icmp_ln16 & icmp_ln16_1 & !icmp_ln19_2)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%weightsT_7_load_1 = load i8 %weightsT_7" [conv2D0.cpp:19]   --->   Operation 59 'load' 'weightsT_7_load_1' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>
ST_3 : Operation 60 [1/2] (2.32ns)   --->   "%weightsT_21 = load i4 %weights_addr_1" [conv2D0.cpp:19]   --->   Operation 60 'load' 'weightsT_21' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 9> <RAM>
ST_3 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node weightsT_22)   --->   "%or_ln19 = or i1 %icmp_ln19_1, i1 %icmp_ln19_2" [conv2D0.cpp:19]   --->   Operation 61 'or' 'or_ln19' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node weightsT_22)   --->   "%or_ln19_1 = or i1 %or_ln19, i1 %icmp_ln19" [conv2D0.cpp:19]   --->   Operation 62 'or' 'or_ln19_1' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (1.24ns) (out node of the LUT)   --->   "%weightsT_22 = select i1 %or_ln19_1, i8 %weightsT_7_load_1, i8 %weightsT_21" [conv2D0.cpp:19]   --->   Operation 63 'select' 'weightsT_22' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (1.24ns)   --->   "%weightsT_23 = select i1 %icmp_ln19_2, i8 %weightsT_21, i8 %weightsT_5_load_1" [conv2D0.cpp:19]   --->   Operation 64 'select' 'weightsT_23' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (1.24ns)   --->   "%weightsT_24 = select i1 %icmp_ln19_1, i8 %weightsT_21, i8 %weightsT_3_load_1" [conv2D0.cpp:19]   --->   Operation 65 'select' 'weightsT_24' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (1.24ns)   --->   "%weightsT_25 = select i1 %icmp_ln19, i8 %weightsT_21, i8 %weightsT_1_load_1" [conv2D0.cpp:19]   --->   Operation 66 'select' 'weightsT_25' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_22, i8 %weightsT_7" [conv2D0.cpp:10]   --->   Operation 67 'store' 'store_ln10' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_23, i8 %weightsT_5" [conv2D0.cpp:10]   --->   Operation 68 'store' 'store_ln10' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_24, i8 %weightsT_3" [conv2D0.cpp:10]   --->   Operation 69 'store' 'store_ln10' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%store_ln10 = store i8 %weightsT_25, i8 %weightsT_1" [conv2D0.cpp:10]   --->   Operation 70 'store' 'store_ln10' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln16 = br void %for.inc12.0" [conv2D0.cpp:16]   --->   Operation 71 'br' 'br_ln16' <Predicate = (icmp_ln16 & icmp_ln16_1)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.58>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%weightsT_1_load_2 = load i8 %weightsT_1"   --->   Operation 72 'load' 'weightsT_1_load_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%weightsT_3_load11 = load i8 %weightsT_3"   --->   Operation 73 'load' 'weightsT_3_load11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%weightsT_5_load_2 = load i8 %weightsT_5"   --->   Operation 74 'load' 'weightsT_5_load_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%weightsT_7_load_2 = load i8 %weightsT_7"   --->   Operation 75 'load' 'weightsT_7_load_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%weightsT_load = load i8 %weightsT"   --->   Operation 76 'load' 'weightsT_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%weightsT_2_load = load i8 %weightsT_2"   --->   Operation 77 'load' 'weightsT_2_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%weightsT_4_load = load i8 %weightsT_4"   --->   Operation 78 'load' 'weightsT_4_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%weightsT_6_load = load i8 %weightsT_6"   --->   Operation 79 'load' 'weightsT_6_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%weightsT_8_load = load i8 %weightsT_8"   --->   Operation 80 'load' 'weightsT_8_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_8_out, i8 %weightsT_14"   --->   Operation 81 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_7_out, i8 %weightsT_7_load_2"   --->   Operation 82 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_6_out, i8 %weightsT_13"   --->   Operation 83 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_5_out, i8 %weightsT_5_load_2"   --->   Operation 84 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_4_out, i8 %weightsT_12"   --->   Operation 85 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_3_out, i8 %weightsT_3_load11"   --->   Operation 86 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_2_out, i8 %weightsT_11"   --->   Operation 87 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_1_out, i8 %weightsT_1_load_2"   --->   Operation 88 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_out, i8 %weightsT_10"   --->   Operation 89 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_14_out, i8 %weightsT_8_load"   --->   Operation 90 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_13_out, i8 %weightsT_6_load"   --->   Operation 91 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_12_out, i8 %weightsT_4_load"   --->   Operation 92 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_11_out, i8 %weightsT_2_load"   --->   Operation 93 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_10_out, i8 %weightsT_load"   --->   Operation 94 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (1.58ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 95 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 5 <SV = 3> <Delay = 1.58>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%weightsT_1_load = load i8 %weightsT_1"   --->   Operation 96 'load' 'weightsT_1_load' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%weightsT_3_load = load i8 %weightsT_3"   --->   Operation 97 'load' 'weightsT_3_load' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%weightsT_5_load = load i8 %weightsT_5"   --->   Operation 98 'load' 'weightsT_5_load' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%weightsT_7_load = load i8 %weightsT_7"   --->   Operation 99 'load' 'weightsT_7_load' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_8_out, i8 %weightsT_14"   --->   Operation 100 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_7_out, i8 %weightsT_7_load"   --->   Operation 101 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_6_out, i8 %weightsT_13"   --->   Operation 102 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_5_out, i8 %weightsT_5_load"   --->   Operation 103 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_4_out, i8 %weightsT_12"   --->   Operation 104 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_3_out, i8 %weightsT_3_load"   --->   Operation 105 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_2_out, i8 %weightsT_11"   --->   Operation 106 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_1_out, i8 %weightsT_1_load"   --->   Operation 107 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %weightsT_out, i8 %weightsT_10"   --->   Operation 108 'write' 'write_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (1.58ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 109 'br' 'br_ln0' <Predicate = (!icmp_ln16)> <Delay = 1.58>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%UnifiedRetVal = phi i1 1, void %for.inc12.0.loop_orow_crit_edge.exitStub, i1 0, void %arrayidx11.0.exit.loop_orow_crit_edge.exitStub"   --->   Operation 110 'phi' 'UnifiedRetVal' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i1 %UnifiedRetVal"   --->   Operation 111 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation 4 bit ('i', conv2D0.cpp:16) [16]  (0.000 ns)
	'store' operation 0 bit ('store_ln16', conv2D0.cpp:16) of constant 0 on local variable 'i', conv2D0.cpp:16 [27]  (1.588 ns)

 <State 2>: 4.301ns
The critical path consists of the following:
	'load' operation 4 bit ('i', conv2D0.cpp:16) on local variable 'i', conv2D0.cpp:16 [30]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln16', conv2D0.cpp:16) [36]  (1.735 ns)
	'store' operation 0 bit ('store_ln16', conv2D0.cpp:16) of variable 'add_ln16', conv2D0.cpp:16 on local variable 'i', conv2D0.cpp:16 [87]  (1.588 ns)
	blocking operation 0.978 ns on control path)

 <State 3>: 3.570ns
The critical path consists of the following:
	'load' operation 8 bit ('weightsT', conv2D0.cpp:19) on array 'weights' [72]  (2.322 ns)
	'select' operation 8 bit ('weightsT', conv2D0.cpp:19) [78]  (1.248 ns)

 <State 4>: 1.588ns
The critical path consists of the following:
	multiplexor before 'phi' operation 1 bit ('UnifiedRetVal') [130]  (1.588 ns)

 <State 5>: 1.588ns
The critical path consists of the following:
	multiplexor before 'phi' operation 1 bit ('UnifiedRetVal') [130]  (1.588 ns)
	'phi' operation 1 bit ('UnifiedRetVal') [130]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
