-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv2D0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_in_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    img_in_0_ce0 : OUT STD_LOGIC;
    img_in_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    img_in_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    img_in_1_ce0 : OUT STD_LOGIC;
    img_in_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    img_out_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    img_out_0_ce0 : OUT STD_LOGIC;
    img_out_0_we0 : OUT STD_LOGIC;
    img_out_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_out_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    img_out_1_ce0 : OUT STD_LOGIC;
    img_out_1_we0 : OUT STD_LOGIC;
    img_out_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weights_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_0_ce0 : OUT STD_LOGIC;
    weights_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    weights_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_1_ce0 : OUT STD_LOGIC;
    weights_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of conv2D0 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv2D0_conv2D0,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010i-clg225-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.203000,HLS_SYN_LAT=43,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=623,HLS_SYN_LUT=1118,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal weightsT_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_load_reg_292 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal weightsT_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_load_1_reg_317 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_load_2_reg_322 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_1_load_reg_327 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_1_load_1_reg_332 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_load_3_reg_337 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal weightsT_load_4_reg_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_1_load_2_reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_1_load_3_reg_352 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal img_inT_ce0 : STD_LOGIC;
    signal img_inT_we0 : STD_LOGIC;
    signal img_inT_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_ce1 : STD_LOGIC;
    signal img_inT_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_ce2 : STD_LOGIC;
    signal img_inT_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_ce3 : STD_LOGIC;
    signal img_inT_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_ce4 : STD_LOGIC;
    signal img_inT_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_ce5 : STD_LOGIC;
    signal img_inT_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal img_inT_1_ce0 : STD_LOGIC;
    signal img_inT_1_we0 : STD_LOGIC;
    signal img_inT_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_1_ce1 : STD_LOGIC;
    signal img_inT_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_1_ce2 : STD_LOGIC;
    signal img_inT_1_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_1_ce3 : STD_LOGIC;
    signal img_inT_1_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_1_ce4 : STD_LOGIC;
    signal img_inT_1_q4 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_inT_1_ce5 : STD_LOGIC;
    signal img_inT_1_q5 : STD_LOGIC_VECTOR (7 downto 0);
    signal weightsT_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal weightsT_ce0 : STD_LOGIC;
    signal weightsT_we0 : STD_LOGIC;
    signal weightsT_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal weightsT_ce1 : STD_LOGIC;
    signal weightsT_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal weightsT_1_ce0 : STD_LOGIC;
    signal weightsT_1_we0 : STD_LOGIC;
    signal weightsT_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal weightsT_1_ce1 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_ap_start : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_ap_done : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_ap_idle : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_ap_ready : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_we0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_we0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_inT_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_in_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_in_0_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_in_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_img_in_1_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_ap_start : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_ap_done : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_ap_idle : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_ap_ready : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_we0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_we0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_weightsT_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_readweights_fu_180_weights_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readweights_fu_180_weights_0_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_readweights_fu_180_weights_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_readweights_fu_180_weights_1_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_done : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_idle : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_ready : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce1 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce2 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce3 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce4 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce5 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce1 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce2 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce3 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce4 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address5 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce5 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_1_load15_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_1_load15_out_ap_vld : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_1_load11_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_1_load11_out_ap_vld : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_load7_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_load7_out_ap_vld : STD_LOGIC;
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_load3_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_load3_out_ap_vld : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_ap_start : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_ap_done : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_ap_idle : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_ap_ready : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_we0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_ce0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_we0 : STD_LOGIC;
    signal grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2D0_Pipeline_readImg_fu_168_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_conv2D0_Pipeline_readweights_fu_180_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_conv2D0_Pipeline_writeImg_fu_215_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component conv2D0_conv2D0_Pipeline_readImg IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_inT_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce0 : OUT STD_LOGIC;
        img_inT_1_we0 : OUT STD_LOGIC;
        img_inT_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_inT_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce0 : OUT STD_LOGIC;
        img_inT_we0 : OUT STD_LOGIC;
        img_inT_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_in_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_in_0_ce0 : OUT STD_LOGIC;
        img_in_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_in_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_in_1_ce0 : OUT STD_LOGIC;
        img_in_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv2D0_conv2D0_Pipeline_readweights IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weightsT_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weightsT_1_ce0 : OUT STD_LOGIC;
        weightsT_1_we0 : OUT STD_LOGIC;
        weightsT_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weightsT_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weightsT_ce0 : OUT STD_LOGIC;
        weightsT_we0 : OUT STD_LOGIC;
        weightsT_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv2D0_conv2D0_Pipeline_loop_orow_loop_ocol IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_inT_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce0 : OUT STD_LOGIC;
        img_inT_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce1 : OUT STD_LOGIC;
        img_inT_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_address2 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce2 : OUT STD_LOGIC;
        img_inT_q2 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_address3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce3 : OUT STD_LOGIC;
        img_inT_q3 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_address4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce4 : OUT STD_LOGIC;
        img_inT_q4 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_address5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_ce5 : OUT STD_LOGIC;
        img_inT_q5 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce0 : OUT STD_LOGIC;
        img_inT_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce1 : OUT STD_LOGIC;
        img_inT_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_1_address2 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce2 : OUT STD_LOGIC;
        img_inT_1_q2 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_1_address3 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce3 : OUT STD_LOGIC;
        img_inT_1_q3 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_1_address4 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce4 : OUT STD_LOGIC;
        img_inT_1_q4 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_inT_1_address5 : OUT STD_LOGIC_VECTOR (2 downto 0);
        img_inT_1_ce5 : OUT STD_LOGIC;
        img_inT_1_q5 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_load : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_load_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_load_3 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_load_4 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_1_load : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_1_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_1_load_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        weightsT_1_load_3 : IN STD_LOGIC_VECTOR (7 downto 0);
        img_outT_1_1_load15_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_outT_1_1_load15_out_ap_vld : OUT STD_LOGIC;
        img_outT_0_1_load11_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_outT_0_1_load11_out_ap_vld : OUT STD_LOGIC;
        img_outT_1_load7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_outT_1_load7_out_ap_vld : OUT STD_LOGIC;
        img_outT_0_load3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_outT_0_load3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component conv2D0_conv2D0_Pipeline_writeImg IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_out_0_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        img_out_0_ce0 : OUT STD_LOGIC;
        img_out_0_we0 : OUT STD_LOGIC;
        img_out_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        img_out_1_ce0 : OUT STD_LOGIC;
        img_out_1_we0 : OUT STD_LOGIC;
        img_out_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_outT_1_load7_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        img_outT_0_load3_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        img_outT_1_1_load15_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        img_outT_0_1_load11_reload : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv2D0_img_inT_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address4 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address5 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component conv2D0_weightsT_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    img_inT_U : component conv2D0_img_inT_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_inT_address0,
        ce0 => img_inT_ce0,
        we0 => img_inT_we0,
        d0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_d0,
        q0 => img_inT_q0,
        address1 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address1,
        ce1 => img_inT_ce1,
        q1 => img_inT_q1,
        address2 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address2,
        ce2 => img_inT_ce2,
        q2 => img_inT_q2,
        address3 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address3,
        ce3 => img_inT_ce3,
        q3 => img_inT_q3,
        address4 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address4,
        ce4 => img_inT_ce4,
        q4 => img_inT_q4,
        address5 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address5,
        ce5 => img_inT_ce5,
        q5 => img_inT_q5);

    img_inT_1_U : component conv2D0_img_inT_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_inT_1_address0,
        ce0 => img_inT_1_ce0,
        we0 => img_inT_1_we0,
        d0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_d0,
        q0 => img_inT_1_q0,
        address1 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address1,
        ce1 => img_inT_1_ce1,
        q1 => img_inT_1_q1,
        address2 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address2,
        ce2 => img_inT_1_ce2,
        q2 => img_inT_1_q2,
        address3 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address3,
        ce3 => img_inT_1_ce3,
        q3 => img_inT_1_q3,
        address4 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address4,
        ce4 => img_inT_1_ce4,
        q4 => img_inT_1_q4,
        address5 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address5,
        ce5 => img_inT_1_ce5,
        q5 => img_inT_1_q5);

    weightsT_U : component conv2D0_weightsT_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weightsT_address0,
        ce0 => weightsT_ce0,
        we0 => weightsT_we0,
        d0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_d0,
        q0 => weightsT_q0,
        address1 => weightsT_address1,
        ce1 => weightsT_ce1,
        q1 => weightsT_q1);

    weightsT_1_U : component conv2D0_weightsT_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weightsT_1_address0,
        ce0 => weightsT_1_ce0,
        we0 => weightsT_1_we0,
        d0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_d0,
        q0 => weightsT_1_q0,
        address1 => weightsT_1_address1,
        ce1 => weightsT_1_ce1,
        q1 => weightsT_1_q1);

    grp_conv2D0_Pipeline_readImg_fu_168 : component conv2D0_conv2D0_Pipeline_readImg
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2D0_Pipeline_readImg_fu_168_ap_start,
        ap_done => grp_conv2D0_Pipeline_readImg_fu_168_ap_done,
        ap_idle => grp_conv2D0_Pipeline_readImg_fu_168_ap_idle,
        ap_ready => grp_conv2D0_Pipeline_readImg_fu_168_ap_ready,
        img_inT_1_address0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_address0,
        img_inT_1_ce0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_ce0,
        img_inT_1_we0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_we0,
        img_inT_1_d0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_d0,
        img_inT_address0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_address0,
        img_inT_ce0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_ce0,
        img_inT_we0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_we0,
        img_inT_d0 => grp_conv2D0_Pipeline_readImg_fu_168_img_inT_d0,
        img_in_0_address0 => grp_conv2D0_Pipeline_readImg_fu_168_img_in_0_address0,
        img_in_0_ce0 => grp_conv2D0_Pipeline_readImg_fu_168_img_in_0_ce0,
        img_in_0_q0 => img_in_0_q0,
        img_in_1_address0 => grp_conv2D0_Pipeline_readImg_fu_168_img_in_1_address0,
        img_in_1_ce0 => grp_conv2D0_Pipeline_readImg_fu_168_img_in_1_ce0,
        img_in_1_q0 => img_in_1_q0);

    grp_conv2D0_Pipeline_readweights_fu_180 : component conv2D0_conv2D0_Pipeline_readweights
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2D0_Pipeline_readweights_fu_180_ap_start,
        ap_done => grp_conv2D0_Pipeline_readweights_fu_180_ap_done,
        ap_idle => grp_conv2D0_Pipeline_readweights_fu_180_ap_idle,
        ap_ready => grp_conv2D0_Pipeline_readweights_fu_180_ap_ready,
        weightsT_1_address0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_address0,
        weightsT_1_ce0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_ce0,
        weightsT_1_we0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_we0,
        weightsT_1_d0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_d0,
        weightsT_address0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_address0,
        weightsT_ce0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_ce0,
        weightsT_we0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_we0,
        weightsT_d0 => grp_conv2D0_Pipeline_readweights_fu_180_weightsT_d0,
        weights_0_address0 => grp_conv2D0_Pipeline_readweights_fu_180_weights_0_address0,
        weights_0_ce0 => grp_conv2D0_Pipeline_readweights_fu_180_weights_0_ce0,
        weights_0_q0 => weights_0_q0,
        weights_1_address0 => grp_conv2D0_Pipeline_readweights_fu_180_weights_1_address0,
        weights_1_ce0 => grp_conv2D0_Pipeline_readweights_fu_180_weights_1_ce0,
        weights_1_q0 => weights_1_q0);

    grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192 : component conv2D0_conv2D0_Pipeline_loop_orow_loop_ocol
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start,
        ap_done => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_done,
        ap_idle => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_idle,
        ap_ready => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_ready,
        img_inT_address0 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address0,
        img_inT_ce0 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce0,
        img_inT_q0 => img_inT_q0,
        img_inT_address1 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address1,
        img_inT_ce1 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce1,
        img_inT_q1 => img_inT_q1,
        img_inT_address2 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address2,
        img_inT_ce2 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce2,
        img_inT_q2 => img_inT_q2,
        img_inT_address3 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address3,
        img_inT_ce3 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce3,
        img_inT_q3 => img_inT_q3,
        img_inT_address4 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address4,
        img_inT_ce4 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce4,
        img_inT_q4 => img_inT_q4,
        img_inT_address5 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address5,
        img_inT_ce5 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce5,
        img_inT_q5 => img_inT_q5,
        img_inT_1_address0 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address0,
        img_inT_1_ce0 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce0,
        img_inT_1_q0 => img_inT_1_q0,
        img_inT_1_address1 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address1,
        img_inT_1_ce1 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce1,
        img_inT_1_q1 => img_inT_1_q1,
        img_inT_1_address2 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address2,
        img_inT_1_ce2 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce2,
        img_inT_1_q2 => img_inT_1_q2,
        img_inT_1_address3 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address3,
        img_inT_1_ce3 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce3,
        img_inT_1_q3 => img_inT_1_q3,
        img_inT_1_address4 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address4,
        img_inT_1_ce4 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce4,
        img_inT_1_q4 => img_inT_1_q4,
        img_inT_1_address5 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address5,
        img_inT_1_ce5 => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce5,
        img_inT_1_q5 => img_inT_1_q5,
        weightsT_load => weightsT_load_reg_292,
        weightsT_load_1 => weightsT_load_1_reg_317,
        weightsT_load_2 => weightsT_load_2_reg_322,
        weightsT_load_3 => weightsT_load_3_reg_337,
        weightsT_load_4 => weightsT_load_4_reg_342,
        weightsT_1_load => weightsT_1_load_reg_327,
        weightsT_1_load_1 => weightsT_1_load_1_reg_332,
        weightsT_1_load_2 => weightsT_1_load_2_reg_347,
        weightsT_1_load_3 => weightsT_1_load_3_reg_352,
        img_outT_1_1_load15_out => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_1_load15_out,
        img_outT_1_1_load15_out_ap_vld => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_1_load15_out_ap_vld,
        img_outT_0_1_load11_out => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_1_load11_out,
        img_outT_0_1_load11_out_ap_vld => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_1_load11_out_ap_vld,
        img_outT_1_load7_out => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_load7_out,
        img_outT_1_load7_out_ap_vld => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_load7_out_ap_vld,
        img_outT_0_load3_out => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_load3_out,
        img_outT_0_load3_out_ap_vld => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_load3_out_ap_vld);

    grp_conv2D0_Pipeline_writeImg_fu_215 : component conv2D0_conv2D0_Pipeline_writeImg
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2D0_Pipeline_writeImg_fu_215_ap_start,
        ap_done => grp_conv2D0_Pipeline_writeImg_fu_215_ap_done,
        ap_idle => grp_conv2D0_Pipeline_writeImg_fu_215_ap_idle,
        ap_ready => grp_conv2D0_Pipeline_writeImg_fu_215_ap_ready,
        img_out_0_address0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_address0,
        img_out_0_ce0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_ce0,
        img_out_0_we0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_we0,
        img_out_0_d0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_d0,
        img_out_1_address0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_address0,
        img_out_1_ce0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_ce0,
        img_out_1_we0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_we0,
        img_out_1_d0 => grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_d0,
        img_outT_1_load7_reload => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_load7_out,
        img_outT_0_load3_reload => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_load3_out,
        img_outT_1_1_load15_reload => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_1_1_load15_out,
        img_outT_0_1_load11_reload => grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_outT_0_1_load11_out);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_ready = ap_const_logic_1)) then 
                    grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2D0_Pipeline_readImg_fu_168_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2D0_Pipeline_readImg_fu_168_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_conv2D0_Pipeline_readImg_fu_168_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2D0_Pipeline_readImg_fu_168_ap_ready = ap_const_logic_1)) then 
                    grp_conv2D0_Pipeline_readImg_fu_168_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2D0_Pipeline_readweights_fu_180_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2D0_Pipeline_readweights_fu_180_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_conv2D0_Pipeline_readweights_fu_180_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2D0_Pipeline_readweights_fu_180_ap_ready = ap_const_logic_1)) then 
                    grp_conv2D0_Pipeline_readweights_fu_180_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2D0_Pipeline_writeImg_fu_215_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2D0_Pipeline_writeImg_fu_215_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_conv2D0_Pipeline_writeImg_fu_215_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2D0_Pipeline_writeImg_fu_215_ap_ready = ap_const_logic_1)) then 
                    grp_conv2D0_Pipeline_writeImg_fu_215_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                weightsT_1_load_1_reg_332 <= weightsT_1_q0;
                weightsT_1_load_reg_327 <= weightsT_1_q1;
                weightsT_load_1_reg_317 <= weightsT_q1;
                weightsT_load_2_reg_322 <= weightsT_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                weightsT_1_load_2_reg_347 <= weightsT_1_q1;
                weightsT_1_load_3_reg_352 <= weightsT_1_q0;
                weightsT_load_3_reg_337 <= weightsT_q0;
                weightsT_load_4_reg_342 <= weightsT_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                weightsT_load_reg_292 <= weightsT_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_done, grp_conv2D0_Pipeline_writeImg_fu_215_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_conv2D0_Pipeline_writeImg_fu_215_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_done)
    begin
        if ((grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_conv2D0_Pipeline_writeImg_fu_215_ap_done)
    begin
        if ((grp_conv2D0_Pipeline_writeImg_fu_215_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_ap_done, grp_conv2D0_Pipeline_readweights_fu_180_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_conv2D0_Pipeline_readweights_fu_180_ap_done = ap_const_logic_0) or (grp_conv2D0_Pipeline_readImg_fu_168_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_conv2D0_Pipeline_writeImg_fu_215_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_conv2D0_Pipeline_writeImg_fu_215_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_conv2D0_Pipeline_writeImg_fu_215_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_conv2D0_Pipeline_writeImg_fu_215_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_ap_start_reg;
    grp_conv2D0_Pipeline_readImg_fu_168_ap_start <= grp_conv2D0_Pipeline_readImg_fu_168_ap_start_reg;
    grp_conv2D0_Pipeline_readweights_fu_180_ap_start <= grp_conv2D0_Pipeline_readweights_fu_180_ap_start_reg;
    grp_conv2D0_Pipeline_writeImg_fu_215_ap_start <= grp_conv2D0_Pipeline_writeImg_fu_215_ap_start_reg;

    img_inT_1_address0_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_address0, grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_address0 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_inT_1_address0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_address0;
        else 
            img_inT_1_address0 <= "XXX";
        end if; 
    end process;


    img_inT_1_ce0_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_ce0, grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_ce0 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_inT_1_ce0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_ce0;
        else 
            img_inT_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_1_ce1_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_ce1 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce1;
        else 
            img_inT_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_1_ce2_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_ce2 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce2;
        else 
            img_inT_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_1_ce3_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_ce3 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce3;
        else 
            img_inT_1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_1_ce4_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_ce4 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce4;
        else 
            img_inT_1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_1_ce5_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_1_ce5 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_1_ce5;
        else 
            img_inT_1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_1_we0_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_inT_1_we0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_inT_1_we0;
        else 
            img_inT_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_address0_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_img_inT_address0, grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address0, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_address0 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_inT_address0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_inT_address0;
        else 
            img_inT_address0 <= "XXX";
        end if; 
    end process;


    img_inT_ce0_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_img_inT_ce0, grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce0, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_ce0 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_inT_ce0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_inT_ce0;
        else 
            img_inT_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_ce1_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_ce1 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce1;
        else 
            img_inT_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_ce2_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_ce2 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce2;
        else 
            img_inT_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_ce3_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_ce3 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce3;
        else 
            img_inT_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_ce4_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_ce4 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce4;
        else 
            img_inT_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_ce5_assign_proc : process(grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            img_inT_ce5 <= grp_conv2D0_Pipeline_loop_orow_loop_ocol_fu_192_img_inT_ce5;
        else 
            img_inT_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    img_inT_we0_assign_proc : process(grp_conv2D0_Pipeline_readImg_fu_168_img_inT_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            img_inT_we0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_inT_we0;
        else 
            img_inT_we0 <= ap_const_logic_0;
        end if; 
    end process;

    img_in_0_address0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_in_0_address0;
    img_in_0_ce0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_in_0_ce0;
    img_in_1_address0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_in_1_address0;
    img_in_1_ce0 <= grp_conv2D0_Pipeline_readImg_fu_168_img_in_1_ce0;
    img_out_0_address0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_address0;
    img_out_0_ce0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_ce0;
    img_out_0_d0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_d0;
    img_out_0_we0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_0_we0;
    img_out_1_address0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_address0;
    img_out_1_ce0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_ce0;
    img_out_1_d0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_d0;
    img_out_1_we0 <= grp_conv2D0_Pipeline_writeImg_fu_215_img_out_1_we0;

    weightsT_1_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            weightsT_1_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            weightsT_1_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weightsT_1_address0 <= grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_address0;
        else 
            weightsT_1_address0 <= "XXX";
        end if; 
    end process;


    weightsT_1_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            weightsT_1_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            weightsT_1_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            weightsT_1_address1 <= "XXX";
        end if; 
    end process;


    weightsT_1_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            weightsT_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weightsT_1_ce0 <= grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_ce0;
        else 
            weightsT_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weightsT_1_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            weightsT_1_ce1 <= ap_const_logic_1;
        else 
            weightsT_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weightsT_1_we0_assign_proc : process(grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weightsT_1_we0 <= grp_conv2D0_Pipeline_readweights_fu_180_weightsT_1_we0;
        else 
            weightsT_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weightsT_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, grp_conv2D0_Pipeline_readweights_fu_180_weightsT_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            weightsT_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            weightsT_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weightsT_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weightsT_address0 <= grp_conv2D0_Pipeline_readweights_fu_180_weightsT_address0;
        else 
            weightsT_address0 <= "XXX";
        end if; 
    end process;


    weightsT_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            weightsT_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            weightsT_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            weightsT_address1 <= "XXX";
        end if; 
    end process;


    weightsT_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, grp_conv2D0_Pipeline_readweights_fu_180_weightsT_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            weightsT_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weightsT_ce0 <= grp_conv2D0_Pipeline_readweights_fu_180_weightsT_ce0;
        else 
            weightsT_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weightsT_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            weightsT_ce1 <= ap_const_logic_1;
        else 
            weightsT_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weightsT_we0_assign_proc : process(grp_conv2D0_Pipeline_readweights_fu_180_weightsT_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            weightsT_we0 <= grp_conv2D0_Pipeline_readweights_fu_180_weightsT_we0;
        else 
            weightsT_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weights_0_address0 <= grp_conv2D0_Pipeline_readweights_fu_180_weights_0_address0;
    weights_0_ce0 <= grp_conv2D0_Pipeline_readweights_fu_180_weights_0_ce0;
    weights_1_address0 <= grp_conv2D0_Pipeline_readweights_fu_180_weights_1_address0;
    weights_1_ce0 <= grp_conv2D0_Pipeline_readweights_fu_180_weights_1_ce0;
end behav;
