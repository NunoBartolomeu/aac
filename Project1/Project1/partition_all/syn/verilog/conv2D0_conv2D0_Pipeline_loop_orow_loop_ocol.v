// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conv2D0_conv2D0_Pipeline_loop_orow_loop_ocol (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_inT_reload,
        img_inT_1_reload,
        img_inT_4_reload,
        img_inT_5_reload,
        weightsT_reload,
        img_inT_2_reload,
        img_inT_3_reload,
        img_inT_6_reload,
        weightsT_1_reload,
        img_inT_7_reload,
        weightsT_2_reload,
        img_inT_8_reload,
        img_inT_9_reload,
        weightsT_3_reload,
        img_inT_10_reload,
        weightsT_4_reload,
        img_inT_11_reload,
        weightsT_5_reload,
        img_inT_12_reload,
        img_inT_13_reload,
        weightsT_6_reload,
        img_inT_14_reload,
        weightsT_7_reload,
        img_inT_15_reload,
        weightsT_8_reload,
        img_outT_3_out,
        img_outT_3_out_ap_vld,
        img_outT_2_out,
        img_outT_2_out_ap_vld,
        img_outT_1_out,
        img_outT_1_out_ap_vld,
        img_outT_out,
        img_outT_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_inT_reload;
input  [7:0] img_inT_1_reload;
input  [7:0] img_inT_4_reload;
input  [7:0] img_inT_5_reload;
input  [7:0] weightsT_reload;
input  [7:0] img_inT_2_reload;
input  [7:0] img_inT_3_reload;
input  [7:0] img_inT_6_reload;
input  [7:0] weightsT_1_reload;
input  [7:0] img_inT_7_reload;
input  [7:0] weightsT_2_reload;
input  [7:0] img_inT_8_reload;
input  [7:0] img_inT_9_reload;
input  [7:0] weightsT_3_reload;
input  [7:0] img_inT_10_reload;
input  [7:0] weightsT_4_reload;
input  [7:0] img_inT_11_reload;
input  [7:0] weightsT_5_reload;
input  [7:0] img_inT_12_reload;
input  [7:0] img_inT_13_reload;
input  [7:0] weightsT_6_reload;
input  [7:0] img_inT_14_reload;
input  [7:0] weightsT_7_reload;
input  [7:0] img_inT_15_reload;
input  [7:0] weightsT_8_reload;
output  [7:0] img_outT_3_out;
output   img_outT_3_out_ap_vld;
output  [7:0] img_outT_2_out;
output   img_outT_2_out_ap_vld;
output  [7:0] img_outT_1_out;
output   img_outT_1_out_ap_vld;
output  [7:0] img_outT_out;
output   img_outT_out_ap_vld;

reg ap_idle;
reg img_outT_3_out_ap_vld;
reg img_outT_2_out_ap_vld;
reg img_outT_1_out_ap_vld;
reg img_outT_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln26_fu_388_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln26_reg_1076;
reg   [0:0] icmp_ln26_reg_1076_pp0_iter1_reg;
reg   [0:0] icmp_ln26_reg_1076_pp0_iter2_reg;
reg   [0:0] icmp_ln26_reg_1076_pp0_iter3_reg;
wire   [0:0] empty_fu_434_p1;
reg   [0:0] empty_reg_1080;
wire   [0:0] trunc_ln32_fu_438_p1;
reg   [0:0] trunc_ln32_reg_1088;
wire   [1:0] add_ln32_fu_442_p2;
reg   [1:0] add_ln32_reg_1097;
wire  signed [7:0] tmp_2_fu_456_p15;
wire  signed [7:0] tmp_8_fu_498_p15;
wire  signed [7:0] tmp_9_fu_542_p11;
wire   [1:0] add_ln_fu_566_p3;
reg   [1:0] add_ln_reg_1117;
reg   [1:0] add_ln_reg_1117_pp0_iter1_reg;
reg   [1:0] add_ln_reg_1117_pp0_iter2_reg;
reg   [1:0] add_ln_reg_1117_pp0_iter3_reg;
reg   [1:0] add_ln_reg_1117_pp0_iter4_reg;
wire   [7:0] img_outT_5_fu_628_p2;
reg   [7:0] img_outT_5_reg_1121;
wire   [7:0] mul_ln33_1_fu_661_p2;
reg   [7:0] mul_ln33_1_reg_1126;
wire  signed [7:0] tmp_4_fu_689_p11;
wire  signed [7:0] tmp_5_fu_726_p15;
wire  signed [7:0] tmp_6_fu_761_p11;
reg  signed [7:0] tmp_6_reg_1141;
wire   [7:0] mul_ln33_5_fu_811_p2;
reg   [7:0] mul_ln33_5_reg_1146;
wire   [7:0] mul_ln33_4_fu_816_p2;
reg   [7:0] mul_ln33_4_reg_1151;
wire   [7:0] grp_fu_876_p3;
reg  signed [7:0] add_ln33_reg_1156;
reg  signed [7:0] add_ln33_reg_1156_pp0_iter4_reg;
wire   [7:0] grp_fu_869_p3;
reg  signed [7:0] add_ln33_11_reg_1161;
wire   [7:0] grp_fu_883_p3;
wire   [7:0] grp_fu_898_p3;
reg  signed [7:0] add_ln33_6_reg_1171;
(* use_dsp48 = "no" *) wire   [7:0] add_ln33_14_fu_820_p2;
reg   [7:0] add_ln33_14_reg_1176;
reg   [1:0] ocol_fu_164;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_ocol_load;
wire    ap_block_pp0_stage0;
reg   [1:0] orow_fu_168;
wire   [1:0] select_ln26_fu_426_p3;
reg   [1:0] ap_sig_allocacmp_orow_load;
reg   [2:0] indvar_flatten_fu_172;
wire   [2:0] add_ln26_fu_394_p2;
reg   [2:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [7:0] img_outT_fu_176;
wire   [7:0] acc_1_fu_828_p2;
reg   [7:0] img_outT_1_fu_180;
reg   [7:0] img_outT_2_fu_184;
reg   [7:0] img_outT_3_fu_188;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln27_fu_406_p2;
wire   [1:0] add_ln26_1_fu_420_p2;
wire   [1:0] select_ln14_fu_412_p3;
wire   [7:0] tmp_2_fu_456_p13;
wire   [2:0] tmp_2_fu_456_p14;
wire   [7:0] tmp_8_fu_498_p13;
wire   [3:0] tmp_8_fu_498_p14;
wire   [7:0] tmp_9_fu_542_p9;
wire   [3:0] tmp_9_fu_542_p10;
wire   [2:0] shl_ln_fu_589_p3;
wire   [7:0] tmp_1_fu_608_p9;
wire   [2:0] tmp_1_fu_608_p10;
wire  signed [7:0] tmp_1_fu_608_p11;
wire   [7:0] tmp_3_fu_641_p9;
wire   [2:0] tmp_3_fu_641_p10;
wire  signed [7:0] tmp_3_fu_641_p11;
wire   [3:0] zext_ln32_fu_596_p1;
wire   [3:0] add_ln32_1_fu_666_p2;
wire   [2:0] tmp_s_fu_672_p4;
wire   [7:0] tmp_4_fu_689_p9;
wire   [3:0] tmp_4_fu_689_p10;
wire   [1:0] tmp_10_fu_709_p4;
wire   [7:0] tmp_5_fu_726_p13;
wire   [3:0] tmp_5_fu_726_p14;
wire   [7:0] tmp_6_fu_761_p9;
wire   [3:0] tmp_6_fu_761_p10;
wire   [7:0] tmp_7_fu_791_p9;
wire   [3:0] tmp_7_fu_791_p10;
wire  signed [7:0] tmp_7_fu_791_p11;
wire  signed [7:0] add_ln33_14_fu_820_p0;
wire   [7:0] grp_fu_890_p3;
(* use_dsp48 = "no" *) wire   [7:0] add_ln33_10_fu_824_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [2:0] tmp_2_fu_456_p1;
wire   [2:0] tmp_2_fu_456_p3;
wire   [2:0] tmp_2_fu_456_p5;
wire  signed [2:0] tmp_2_fu_456_p7;
wire  signed [2:0] tmp_2_fu_456_p9;
wire  signed [2:0] tmp_2_fu_456_p11;
wire  signed [3:0] tmp_8_fu_498_p1;
wire  signed [3:0] tmp_8_fu_498_p3;
wire  signed [3:0] tmp_8_fu_498_p5;
wire  signed [3:0] tmp_8_fu_498_p7;
wire  signed [3:0] tmp_8_fu_498_p9;
wire  signed [3:0] tmp_8_fu_498_p11;
wire  signed [3:0] tmp_9_fu_542_p1;
wire  signed [3:0] tmp_9_fu_542_p3;
wire  signed [3:0] tmp_9_fu_542_p5;
wire  signed [3:0] tmp_9_fu_542_p7;
wire   [2:0] tmp_1_fu_608_p1;
wire   [2:0] tmp_1_fu_608_p3;
wire  signed [2:0] tmp_1_fu_608_p5;
wire  signed [2:0] tmp_1_fu_608_p7;
wire   [2:0] tmp_3_fu_641_p1;
wire   [2:0] tmp_3_fu_641_p3;
wire  signed [2:0] tmp_3_fu_641_p5;
wire  signed [2:0] tmp_3_fu_641_p7;
wire   [3:0] tmp_4_fu_689_p1;
wire   [3:0] tmp_4_fu_689_p3;
wire  signed [3:0] tmp_4_fu_689_p5;
wire  signed [3:0] tmp_4_fu_689_p7;
wire   [3:0] tmp_5_fu_726_p1;
wire   [3:0] tmp_5_fu_726_p3;
wire   [3:0] tmp_5_fu_726_p5;
wire  signed [3:0] tmp_5_fu_726_p7;
wire  signed [3:0] tmp_5_fu_726_p9;
wire  signed [3:0] tmp_5_fu_726_p11;
wire   [3:0] tmp_6_fu_761_p1;
wire   [3:0] tmp_6_fu_761_p3;
wire  signed [3:0] tmp_6_fu_761_p5;
wire  signed [3:0] tmp_6_fu_761_p7;
wire  signed [3:0] tmp_7_fu_791_p1;
wire  signed [3:0] tmp_7_fu_791_p3;
wire  signed [3:0] tmp_7_fu_791_p5;
wire  signed [3:0] tmp_7_fu_791_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ocol_fu_164 = 2'd0;
#0 orow_fu_168 = 2'd0;
#0 indvar_flatten_fu_172 = 3'd0;
#0 img_outT_fu_176 = 8'd0;
#0 img_outT_1_fu_180 = 8'd0;
#0 img_outT_2_fu_184 = 8'd0;
#0 img_outT_3_fu_188 = 8'd0;
#0 ap_done_reg = 1'b0;
end

conv2D0_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h1 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h3 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h4 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h5 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h6 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U55(
    .din0(img_inT_1_reload),
    .din1(img_inT_2_reload),
    .din2(img_inT_3_reload),
    .din3(img_inT_4_reload),
    .din4(img_inT_5_reload),
    .din5(img_inT_6_reload),
    .def(tmp_2_fu_456_p13),
    .sel(tmp_2_fu_456_p14),
    .dout(tmp_2_fu_456_p15)
);

conv2D0_sparsemux_13_4_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h9 ),
    .din0_WIDTH( 8 ),
    .CASE1( 4'hA ),
    .din1_WIDTH( 8 ),
    .CASE2( 4'hB ),
    .din2_WIDTH( 8 ),
    .CASE3( 4'hC ),
    .din3_WIDTH( 8 ),
    .CASE4( 4'hD ),
    .din4_WIDTH( 8 ),
    .CASE5( 4'hE ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
sparsemux_13_4_8_1_1_U56(
    .din0(img_inT_9_reload),
    .din1(img_inT_10_reload),
    .din2(img_inT_11_reload),
    .din3(img_inT_12_reload),
    .din4(img_inT_13_reload),
    .din5(img_inT_14_reload),
    .def(tmp_8_fu_498_p13),
    .sel(tmp_8_fu_498_p14),
    .dout(tmp_8_fu_498_p15)
);

conv2D0_sparsemux_9_4_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'hA ),
    .din0_WIDTH( 8 ),
    .CASE1( 4'hB ),
    .din1_WIDTH( 8 ),
    .CASE2( 4'hE ),
    .din2_WIDTH( 8 ),
    .CASE3( 4'hF ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
sparsemux_9_4_8_1_1_U57(
    .din0(img_inT_10_reload),
    .din1(img_inT_11_reload),
    .din2(img_inT_14_reload),
    .din3(img_inT_15_reload),
    .def(tmp_9_fu_542_p9),
    .sel(tmp_9_fu_542_p10),
    .dout(tmp_9_fu_542_p11)
);

conv2D0_sparsemux_9_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h4 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h5 ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_9_3_8_1_1_U58(
    .din0(img_inT_reload),
    .din1(img_inT_1_reload),
    .din2(img_inT_4_reload),
    .din3(img_inT_5_reload),
    .def(tmp_1_fu_608_p9),
    .sel(tmp_1_fu_608_p10),
    .dout(tmp_1_fu_608_p11)
);

conv2D0_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U59(
    .din0(tmp_1_fu_608_p11),
    .din1(weightsT_reload),
    .dout(img_outT_5_fu_628_p2)
);

conv2D0_sparsemux_9_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h2 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h3 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h6 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h7 ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_9_3_8_1_1_U60(
    .din0(img_inT_2_reload),
    .din1(img_inT_3_reload),
    .din2(img_inT_6_reload),
    .din3(img_inT_7_reload),
    .def(tmp_3_fu_641_p9),
    .sel(tmp_3_fu_641_p10),
    .dout(tmp_3_fu_641_p11)
);

conv2D0_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U61(
    .din0(tmp_3_fu_641_p11),
    .din1(weightsT_2_reload),
    .dout(mul_ln33_1_fu_661_p2)
);

conv2D0_sparsemux_9_4_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h4 ),
    .din0_WIDTH( 8 ),
    .CASE1( 4'h5 ),
    .din1_WIDTH( 8 ),
    .CASE2( 4'h8 ),
    .din2_WIDTH( 8 ),
    .CASE3( 4'h9 ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
sparsemux_9_4_8_1_1_U62(
    .din0(img_inT_4_reload),
    .din1(img_inT_5_reload),
    .din2(img_inT_8_reload),
    .din3(img_inT_9_reload),
    .def(tmp_4_fu_689_p9),
    .sel(tmp_4_fu_689_p10),
    .dout(tmp_4_fu_689_p11)
);

conv2D0_sparsemux_13_4_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h5 ),
    .din0_WIDTH( 8 ),
    .CASE1( 4'h6 ),
    .din1_WIDTH( 8 ),
    .CASE2( 4'h7 ),
    .din2_WIDTH( 8 ),
    .CASE3( 4'h8 ),
    .din3_WIDTH( 8 ),
    .CASE4( 4'h9 ),
    .din4_WIDTH( 8 ),
    .CASE5( 4'hA ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
sparsemux_13_4_8_1_1_U63(
    .din0(img_inT_5_reload),
    .din1(img_inT_6_reload),
    .din2(img_inT_7_reload),
    .din3(img_inT_8_reload),
    .din4(img_inT_9_reload),
    .din5(img_inT_10_reload),
    .def(tmp_5_fu_726_p13),
    .sel(tmp_5_fu_726_p14),
    .dout(tmp_5_fu_726_p15)
);

conv2D0_sparsemux_9_4_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h6 ),
    .din0_WIDTH( 8 ),
    .CASE1( 4'h7 ),
    .din1_WIDTH( 8 ),
    .CASE2( 4'hA ),
    .din2_WIDTH( 8 ),
    .CASE3( 4'hB ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
sparsemux_9_4_8_1_1_U64(
    .din0(img_inT_6_reload),
    .din1(img_inT_7_reload),
    .din2(img_inT_10_reload),
    .din3(img_inT_11_reload),
    .def(tmp_6_fu_761_p9),
    .sel(tmp_6_fu_761_p10),
    .dout(tmp_6_fu_761_p11)
);

conv2D0_sparsemux_9_4_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h8 ),
    .din0_WIDTH( 8 ),
    .CASE1( 4'h9 ),
    .din1_WIDTH( 8 ),
    .CASE2( 4'hC ),
    .din2_WIDTH( 8 ),
    .CASE3( 4'hD ),
    .din3_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
sparsemux_9_4_8_1_1_U65(
    .din0(img_inT_8_reload),
    .din1(img_inT_9_reload),
    .din2(img_inT_12_reload),
    .din3(img_inT_13_reload),
    .def(tmp_7_fu_791_p9),
    .sel(tmp_7_fu_791_p10),
    .dout(tmp_7_fu_791_p11)
);

conv2D0_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U66(
    .din0(tmp_7_fu_791_p11),
    .din1(weightsT_6_reload),
    .dout(mul_ln33_5_fu_811_p2)
);

conv2D0_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U67(
    .din0(tmp_6_reg_1141),
    .din1(weightsT_5_reload),
    .dout(mul_ln33_4_fu_816_p2)
);

conv2D0_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_fu_456_p15),
    .din1(weightsT_1_reload),
    .din2(img_outT_5_reg_1121),
    .ce(1'b1),
    .dout(grp_fu_869_p3)
);

conv2D0_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_fu_498_p15),
    .din1(weightsT_7_reload),
    .din2(mul_ln33_5_reg_1146),
    .ce(1'b1),
    .dout(grp_fu_876_p3)
);

conv2D0_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_fu_542_p11),
    .din1(weightsT_8_reload),
    .din2(mul_ln33_1_reg_1126),
    .ce(1'b1),
    .dout(grp_fu_883_p3)
);

conv2D0_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_fu_689_p11),
    .din1(weightsT_3_reload),
    .din2(grp_fu_883_p3),
    .ce(1'b1),
    .dout(grp_fu_890_p3)
);

conv2D0_mac_muladd_8s_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_8ns_8_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_5_fu_726_p15),
    .din1(weightsT_4_reload),
    .din2(mul_ln33_4_reg_1151),
    .ce(1'b1),
    .dout(grp_fu_898_p3)
);

conv2D0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln26_fu_388_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_172 <= add_ln26_fu_394_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_172 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln26_fu_388_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ocol_fu_164 <= add_ln32_fu_442_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ocol_fu_164 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln26_fu_388_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            orow_fu_168 <= select_ln26_fu_426_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            orow_fu_168 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln32_reg_1097 <= add_ln32_fu_442_p2;
        add_ln_reg_1117 <= add_ln_fu_566_p3;
        add_ln_reg_1117_pp0_iter1_reg <= add_ln_reg_1117;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_1080 <= empty_fu_434_p1;
        icmp_ln26_reg_1076 <= icmp_ln26_fu_388_p2;
        icmp_ln26_reg_1076_pp0_iter1_reg <= icmp_ln26_reg_1076;
        img_outT_5_reg_1121 <= img_outT_5_fu_628_p2;
        mul_ln33_1_reg_1126 <= mul_ln33_1_fu_661_p2;
        mul_ln33_5_reg_1146 <= mul_ln33_5_fu_811_p2;
        tmp_6_reg_1141 <= tmp_6_fu_761_p11;
        trunc_ln32_reg_1088 <= trunc_ln32_fu_438_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        add_ln33_11_reg_1161 <= grp_fu_869_p3;
        add_ln33_reg_1156 <= grp_fu_876_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln33_14_reg_1176 <= add_ln33_14_fu_820_p2;
        add_ln33_reg_1156_pp0_iter4_reg <= add_ln33_reg_1156;
        add_ln_reg_1117_pp0_iter2_reg <= add_ln_reg_1117_pp0_iter1_reg;
        add_ln_reg_1117_pp0_iter3_reg <= add_ln_reg_1117_pp0_iter2_reg;
        add_ln_reg_1117_pp0_iter4_reg <= add_ln_reg_1117_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln26_reg_1076_pp0_iter2_reg <= icmp_ln26_reg_1076_pp0_iter1_reg;
        icmp_ln26_reg_1076_pp0_iter3_reg <= icmp_ln26_reg_1076_pp0_iter2_reg;
        mul_ln33_4_reg_1151 <= mul_ln33_4_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add_ln33_6_reg_1171 <= grp_fu_898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (2'd1 == add_ln_reg_1117_pp0_iter4_reg))) begin
        img_outT_1_fu_180 <= acc_1_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (2'd2 == add_ln_reg_1117_pp0_iter4_reg))) begin
        img_outT_2_fu_184 <= acc_1_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (2'd3 == add_ln_reg_1117_pp0_iter4_reg))) begin
        img_outT_3_fu_188 <= acc_1_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (2'd0 == add_ln_reg_1117_pp0_iter4_reg))) begin
        img_outT_fu_176 <= acc_1_fu_828_p2;
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_388_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 3'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ocol_load = 2'd0;
    end else begin
        ap_sig_allocacmp_ocol_load = ocol_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_orow_load = 2'd0;
    end else begin
        ap_sig_allocacmp_orow_load = orow_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_reg_1076_pp0_iter3_reg == 1'd1))) begin
        img_outT_1_out_ap_vld = 1'b1;
    end else begin
        img_outT_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_reg_1076_pp0_iter3_reg == 1'd1))) begin
        img_outT_2_out_ap_vld = 1'b1;
    end else begin
        img_outT_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_reg_1076_pp0_iter3_reg == 1'd1))) begin
        img_outT_3_out_ap_vld = 1'b1;
    end else begin
        img_outT_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_reg_1076_pp0_iter3_reg == 1'd1))) begin
        img_outT_out_ap_vld = 1'b1;
    end else begin
        img_outT_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_1_fu_828_p2 = (add_ln33_14_reg_1176 + add_ln33_10_fu_824_p2);

assign add_ln26_1_fu_420_p2 = (ap_sig_allocacmp_orow_load + 2'd1);

assign add_ln26_fu_394_p2 = (ap_sig_allocacmp_indvar_flatten_load + 3'd1);

assign add_ln32_1_fu_666_p2 = (zext_ln32_fu_596_p1 + 4'd4);

assign add_ln32_fu_442_p2 = (select_ln14_fu_412_p3 + 2'd1);

assign add_ln33_10_fu_824_p2 = ($signed(add_ln33_6_reg_1171) + $signed(add_ln33_reg_1156_pp0_iter4_reg));

assign add_ln33_14_fu_820_p0 = grp_fu_890_p3;

assign add_ln33_14_fu_820_p2 = ($signed(add_ln33_14_fu_820_p0) + $signed(add_ln33_11_reg_1161));

assign add_ln_fu_566_p3 = {{empty_fu_434_p1}, {trunc_ln32_fu_438_p1}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_434_p1 = select_ln26_fu_426_p3[0:0];

assign icmp_ln26_fu_388_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_406_p2 = ((ap_sig_allocacmp_ocol_load == 2'd2) ? 1'b1 : 1'b0);

assign img_outT_1_out = img_outT_1_fu_180;

assign img_outT_2_out = img_outT_2_fu_184;

assign img_outT_3_out = img_outT_3_fu_188;

assign img_outT_out = img_outT_fu_176;

assign select_ln14_fu_412_p3 = ((icmp_ln27_fu_406_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_ocol_load);

assign select_ln26_fu_426_p3 = ((icmp_ln27_fu_406_p2[0:0] == 1'b1) ? add_ln26_1_fu_420_p2 : ap_sig_allocacmp_orow_load);

assign shl_ln_fu_589_p3 = {{empty_reg_1080}, {2'd0}};

assign tmp_10_fu_709_p4 = {{add_ln32_1_fu_666_p2[3:2]}};

assign tmp_1_fu_608_p10 = {{{empty_reg_1080}, {1'd0}}, {trunc_ln32_reg_1088}};

assign tmp_1_fu_608_p9 = 'bx;

assign tmp_2_fu_456_p13 = 'bx;

assign tmp_2_fu_456_p14 = {{empty_fu_434_p1}, {add_ln32_fu_442_p2}};

assign tmp_3_fu_641_p10 = {{{empty_reg_1080}, {1'd1}}, {trunc_ln32_reg_1088}};

assign tmp_3_fu_641_p9 = 'bx;

assign tmp_4_fu_689_p10 = {{tmp_s_fu_672_p4}, {trunc_ln32_reg_1088}};

assign tmp_4_fu_689_p9 = 'bx;

assign tmp_5_fu_726_p13 = 'bx;

assign tmp_5_fu_726_p14 = {{tmp_10_fu_709_p4}, {add_ln32_reg_1097}};

assign tmp_6_fu_761_p10 = {{{tmp_10_fu_709_p4}, {1'd1}}, {trunc_ln32_reg_1088}};

assign tmp_6_fu_761_p9 = 'bx;

assign tmp_7_fu_791_p10 = {{{{{{1'd1}, {empty_reg_1080}}}, {1'd0}}}, {trunc_ln32_reg_1088}};

assign tmp_7_fu_791_p9 = 'bx;

assign tmp_8_fu_498_p13 = 'bx;

assign tmp_8_fu_498_p14 = {{{{1'd1}, {empty_fu_434_p1}}}, {add_ln32_fu_442_p2}};

assign tmp_9_fu_542_p10 = {{{{{{1'd1}, {empty_fu_434_p1}}}, {1'd1}}}, {trunc_ln32_fu_438_p1}};

assign tmp_9_fu_542_p9 = 'bx;

assign tmp_s_fu_672_p4 = {{add_ln32_1_fu_666_p2[3:1]}};

assign trunc_ln32_fu_438_p1 = select_ln14_fu_412_p3[0:0];

assign zext_ln32_fu_596_p1 = shl_ln_fu_589_p3;

endmodule //conv2D0_conv2D0_Pipeline_loop_orow_loop_ocol
