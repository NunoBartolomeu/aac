#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("img_in_0", 8, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("img_in_1", 8, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("img_in_2", 8, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("img_in_3", 8, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("img_in_4", 8, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("img_in_5", 8, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("img_in_6", 8, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("img_in_7", 8, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("img_in_8", 8, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("img_in_9", 8, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("img_in_10", 8, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("img_in_11", 8, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("img_in_12", 8, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("img_in_13", 8, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("img_in_14", 8, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("img_in_15", 8, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("img_out_0", 8, hls_out, 16, "ap_vld", "out_data", 1),
	Port_Property("img_out_0_ap_vld", 1, hls_out, 16, "ap_vld", "out_vld", 1),
	Port_Property("img_out_1", 8, hls_out, 17, "ap_vld", "out_data", 1),
	Port_Property("img_out_1_ap_vld", 1, hls_out, 17, "ap_vld", "out_vld", 1),
	Port_Property("img_out_2", 8, hls_out, 18, "ap_vld", "out_data", 1),
	Port_Property("img_out_2_ap_vld", 1, hls_out, 18, "ap_vld", "out_vld", 1),
	Port_Property("img_out_3", 8, hls_out, 19, "ap_vld", "out_data", 1),
	Port_Property("img_out_3_ap_vld", 1, hls_out, 19, "ap_vld", "out_vld", 1),
	Port_Property("weights_0_address0", 1, hls_out, 20, "ap_memory", "mem_address", 1),
	Port_Property("weights_0_ce0", 1, hls_out, 20, "ap_memory", "mem_ce", 1),
	Port_Property("weights_0_q0", 8, hls_in, 20, "ap_memory", "in_data", 1),
	Port_Property("weights_1_address0", 1, hls_out, 21, "ap_memory", "mem_address", 1),
	Port_Property("weights_1_ce0", 1, hls_out, 21, "ap_memory", "mem_ce", 1),
	Port_Property("weights_1_q0", 8, hls_in, 21, "ap_memory", "mem_dout", 1),
	Port_Property("weights_2_address0", 1, hls_out, 22, "ap_memory", "mem_address", 1),
	Port_Property("weights_2_ce0", 1, hls_out, 22, "ap_memory", "mem_ce", 1),
	Port_Property("weights_2_q0", 8, hls_in, 22, "ap_memory", "mem_dout", 1),
	Port_Property("weights_3_address0", 1, hls_out, 23, "ap_memory", "mem_address", 1),
	Port_Property("weights_3_ce0", 1, hls_out, 23, "ap_memory", "mem_ce", 1),
	Port_Property("weights_3_q0", 8, hls_in, 23, "ap_memory", "in_data", 1),
	Port_Property("weights_4_address0", 1, hls_out, 24, "ap_memory", "mem_address", 1),
	Port_Property("weights_4_ce0", 1, hls_out, 24, "ap_memory", "mem_ce", 1),
	Port_Property("weights_4_q0", 8, hls_in, 24, "ap_memory", "mem_dout", 1),
	Port_Property("weights_5_address0", 1, hls_out, 25, "ap_memory", "mem_address", 1),
	Port_Property("weights_5_ce0", 1, hls_out, 25, "ap_memory", "mem_ce", 1),
	Port_Property("weights_5_q0", 8, hls_in, 25, "ap_memory", "in_data", 1),
	Port_Property("weights_6_address0", 1, hls_out, 26, "ap_memory", "mem_address", 1),
	Port_Property("weights_6_ce0", 1, hls_out, 26, "ap_memory", "mem_ce", 1),
	Port_Property("weights_6_q0", 8, hls_in, 26, "ap_memory", "in_data", 1),
	Port_Property("weights_7_address0", 1, hls_out, 27, "ap_memory", "mem_address", 1),
	Port_Property("weights_7_ce0", 1, hls_out, 27, "ap_memory", "mem_ce", 1),
	Port_Property("weights_7_q0", 8, hls_in, 27, "ap_memory", "mem_dout", 1),
};
const char* HLS_Design_Meta::dut_name = "conv2D0";
